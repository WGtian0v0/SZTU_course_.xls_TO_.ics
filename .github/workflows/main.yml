# .github/workflows/build.yml
name: Build Nuitka Single File Executable

on:
  push:
    tags: ['v*']  # 打标签时触发
  release:
    types: [published]  # 发布时触发
  workflow_dispatch:  # 手动触发

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nuitka

    - name: Install Playwright browsers
      run: |
        python -m playwright install chromium

    - name: Build with Nuitka
      run: |
        python -m nuitka ^
          --standalone ^
          --onefile ^
          --windows-console-mode=disable ^
          --include-package=icalendar ^
          --include-package=keyring ^
          --include-package=pandas ^
          --include-package=playwright ^
          --include-package=pytz ^
          --include-package=greenlet ^
          --include-package=pyee ^
          --include-data-dir=%USERPROFILE%\.cache\ms-playwright=playwright\browsers ^
          --output-filename=SchoolAuto.exe ^
          source/main.py

    - name: Test executable
      run: |
        .\SchoolAuto.exe --version || echo "Executable test completed"

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: SchoolAuto-Windows
        path: SchoolAuto.exe
        retention-days: 30

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y patchelf

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nuitka

    - name: Install Playwright browsers
      run: |
        python -m playwright install chromium

    - name: Build with Nuitka
      run: |
        python -m nuitka \
          --standalone \
          --onefile \
          --include-package=icalendar \
          --include-package=keyring \
          --include-package=pandas \
          --include-package=playwright \
          --include-package=pytz \
          --include-package=greenlet \
          --include-package=pyee \
          --include-data-dir=$HOME/.cache/ms-playwright=playwright/browsers \
          --output-filename=SchoolAuto \
          source/main.py

    - name: Make executable
      run: chmod +x SchoolAuto

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: SchoolAuto-Linux
        path: SchoolAuto
        retention-days: 30

  create-release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          SchoolAuto-Windows/SchoolAuto.exe
          SchoolAuto-Linux/SchoolAuto
        body: |
          自动构建的 SchoolAuto 单文件可执行程序
          
          **包含组件:**
          - icalendar==6.3.1
          - keyring==25.6.0
          - pandas==2.3.3
          - playwright==1.55.0
          - pytz==2025.2
          
          **构建信息:**
          - 构建时间: ${{ github.event.release.created_at }}
          - 提交版本: ${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
